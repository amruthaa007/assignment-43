#write a program when two numbers are given such that sum,difference and their exponent must be printed on three new lines.
#code:
     a=input("enter first number")
     b=input("enter second number")
     X=a+b
     Y=a-b
     Z=a**b
     Print(x)
     Print(y)
     Print(z)
#output:
>>enter first number:2
>>enter second number:3
5
-1
8
#write a program to count the characters in a given string.
string="Amrutha is in Anantapur"
x=string.count("A")
print(x)
#output:
>>2
# write a program to find area of circle
a=input("enter the radius of circle")
Area=(3.14)*int(a)*int(a)
print(Area)
#output:
>>enter the radius of circle: 7
153.86
# write a program to find reverse of a string.
string="yaswanth"
x=string[-1:-9:-1]
print(x)
#output:
htnawsay
#write a program to find cube root of a number without using inbuilt function.
a=input("enter a number:")
x=int(a)**(1/3)
print(x)
#output:
>>enter a number:5
1.7099759466766968

#write a program to replace word from a given string.
string="My roll number is 22001A0543"
x=string.replace("roll","admission")
print(x)
#output:
My admission number is 22001A0543
#write a program to swap two numbers.
#code:
a=input("enter a number")
b=input("enter another number")
x=int(a)
int(a)=int(b)
int(b)=x
print(a,b)
#output:
enter a number:5
enter another number:10
10 5
#write a program to find LCM of a number.
#code:
      # Python Program to find the L.C.M. of two input number

def compute_lcm(x, y):

   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1

   return lcm

num1 = 54
num2 = 24

print("The L.C.M. is", compute_lcm(num1, num2))
#write a program to print Fibonacci series 
#code:
     # Program to display the Fibonacci sequence up to n-th term

nterms = int(input("How many terms? "))

# first two terms
n1, n2 = 0, 1
count = 0

# check if the number of terms is valid
if nterms <= 0:
   print("Please enter a positive integer")
# if there is only one term, return n1
elif nterms == 1:
   print("Fibonacci sequence upto",nterms,":")
   print(n1)
# generate fibonacci sequence
else:
   print("Fibonacci sequence:")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       # update values
       n1 = n2
       n2 = nth
       count += 1